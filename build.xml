<!-- This is the main build file for use with Apache Ant. It tells Ant how to
    compile BOXER from the source code, how to build Javadoc documentation,
    etc. 

    To carry out a particular operation with Ant, you provide the name of the
    appropriate target. E.g., to compile the code, you type 

      and compile

     Apache Ant is available for most modern operating systems.
     You can read more about Apache Ant at http://ant.apache.org/manual/index.html

-->

<project name="boxer" default="jar" basedir=".">

<!-- Property Definitions

     Each of the following properties are used by convention in this
     build file.  The values specified can be overridden at run time by
     adding a "-Dname=value" argument to the command line that invokes Ant.
     This technique is normally used to copy the values of the ANT_HOME
     and TOMCAT_HOME environment variables into the "ant.home" and
     "tomcat.home" properties, which are normally not defined explicitly.

     src               The directory where Ant will find the source code of BOXER+BORJ

     boxer.lib         The directory where Ant will find the third-party 
                       libraries needed by BOXER and BORJ, and into which 
                       Boxer's own JAR file will be written

     build             The directory to which Ant will put class files

     

     boxer.doc         The name of the base directory into  which documentation
                       will be copied. It will include a subdirectory for
                       auto-generated API files

     boxer.javadoc           The name of the base directory in which
                       the JavaDoc documentation for this application
                       will be generated.

     build.tmp         A temporary directory within which temporary
                       subdirectories can be created and deleted as needed

-->

 <property name="src" location="src"/>
 <property name="build" location="../classes"/>
 <property name="boxer.lib" location="../lib"/>
 <property name="boxer.doc" location="../doc"/>
 <property name="boxer.api" location="${boxer.doc}/html/api"/>

 <property name="build.tmp" location="/tmp"/>


 <path id="classpath"
       description="The classpath to use for compiling and running BOXER">
   <fileset dir="${boxer.lib}">
     <include name="*.jar"/>
   </fileset>
 </path>


<!-- An auxiliary target; you aren't likely to use it directly.  It just creates necessary directories -->
<target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${boxer.lib}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${boxer.doc}"/>
    <mkdir dir="${boxer.api}"/>
    <mkdir dir=""/>
</target>

<!-- This target tells Ant how to compile BOXER+BORJ. We set
target="1.5", to make it easier for people elsewhere to use our
code. -->
<target name="compile" depends="init"
        description="Compile the source (without the BB adapter)" >
  <!-- Compile the java code from ${src} into ${build} -->
  <javac srcdir="${src}" destdir="${build}"
	 includes="edu/dimacs/**"  optimize="on"
	 debug="on" debuglevel="lines,vars,source"
	 target="1.5"
	 includeantruntime="false" >
    <classpath refid="classpath"/>
  </javac>
</target>

<!-- This target was used to compile BOXER+BORJ with BLACKBOOK. Obsolete -->
<target name="compile-blackbook" depends="init"
        description="Compile the source (including the BB adapter)" >
  <!-- Compile the java code from ${src} into ${build} -->
  <javac srcdir="${src}" destdir="${build}" classpath="${classpath}"
	 includes="edu/dimacs/**,blackbook/**"
	 optimize="on"
	 debug="on" debuglevel="lines,vars,source" 
	 />
</target>

<!-- This compiles BOXER+BORJ, and packages the class files into a JAR file
-->
<target name="jar" depends="compile"
        description="Builds a Jar file that will include all Boxer and BORJ class files (but not the Blackbook-adapter stuff). It will include all of our own class files, and can be used as a binary distribution. The manifest file will specify the BORJ Driver class as the main class; it will also mention two other Jar files (from the Xerces distribution) that should be found in the same directory with this jar file">
  <jar destfile="${boxer.lib}/boxer.jar"   basedir="${build}">
    <manifest> <!-- file="manifest-data.dat" mode="replace" -->
      <attribute name="Main-Class" value="edu.dimacs.mms.borj.Driver"/>
      <attribute name="Class-Path" value=". xercesImpl.jar xml-apis.jar"/>	
    </manifest>
  </jar>
</target>

<!-- Reports the current version of the source code (as per Version.java) -->
<target name="boxerversion">
  <exec executable="grep" outputproperty="boxer.ver">
    <arg line="String.version ${src}/edu/dimacs/mms/boxer/Version.java"/>
    <redirector >
      <outputfilterchain >
	<replaceregex pattern="[^0-9\.]" replace="" flags="g"/>
      </outputfilterchain>
    </redirector>
  </exec>
  <echo message="Assuming the Boxer version is ${boxer.ver}"/>
</target>

<!-- Build the HTML documentation directory by running Javadoc -->
<target name="javadoc" depends="compile,boxerversion">
  <echo message="Javadoc: Assuming the Boxer version is ${boxer.ver}"/>

  <copy todir="${boxer.doc}">
    <fileset dir="doc/"/>
  </copy>

  <copy todir="${boxer.doc}/html">
    <fileset dir="sample-data/" includes="sample.xml,sample-suite-out.xml,eg-learner-param-1.xml"/>
  </copy>
  <copy todir="${boxer.doc}/html">
    <fileset dir="sample-data/priors" includes="laplace-overall-priors.10000.xml"/>
  </copy>



  <javadoc packagenames="edu.dimacs.mms.*"
	   sourcepath="${src}"
           destdir="${boxer.api}"
	   author="true"
           version="true"
           use="true"
	   header="&lt;em&gt;BOXER ${boxer.ver}&lt;/em&gt;"   
	   windowtitle="BOXER ${boxer.ver} API" 
	   overview="doc/html/api/overview.html">
    <!-- link="http://java.sun.com/j2se/1.5.0/docs/api/" -->   
    <classpath refid="classpath"/>
    <link href="http://download.oracle.com/javase/1.5.0/docs/api/"/>
    <link href="http://download.oracle.com/javaee/5/api/package-list"/>
  </javadoc>

  <echo message="Documentation has been assembled in ${boxer.doc}"/>

</target>

<!-- Produces a zip file that contains everything from this directory (i.e.,
     all human-created files). This is primarily used to create backup files
     etc. for the developers' own needs
-->
<target name="zipall" depends="boxerversion">
  <property name="dest" location="../boxer-${boxer.ver}.zip"/>
  <zip destfile="${dest}" basedir=".."
       includes="boxer-bayesian-regression/**" excludes="**/*~, **/*.bak, **/*.orig, **/*.tmp">
  </zip>
</target>

<!-- Produces "Code for experimentalists" distribution.
  Format: ZIP file
  Name: use-boxer-and-borj-*.*.*.zip
  Content: our binaries, third-party binaries, and docs
-->
<target name="zip-disbin" depends="jar,javadoc,boxerversion">
  <tempfile property="temp.dir" destDir="${build.tmp}" suffix=".boxer"/>
  <mkdir dir="${temp.dir}"/> 
  <property name="temp.base" value="use-boxer-and-borj-${boxer.ver}"/>   
  <property name="temp.assemble" location="${temp.dir}/${temp.base}"/>
  <mkdir dir="${temp.assemble}"/>

  <copy todir="${temp.assemble}">  
    <fileset dir="." includes="tiny-sample/**"/>
    <fileset dir="readme/bin"/>
  </copy>

  <copy todir="${temp.assemble}/doc">  
    <fileset dir="${boxer.doc}"/>
  </copy>

  <copy todir="${temp.assemble}/lib">  
    <fileset dir="${boxer.lib}"/>
  </copy>

  <zip destfile="../${temp.base}.zip" basedir="${temp.dir}"
       includes="${temp.base}/**"/>
  <delete dir="${temp.dir}"/>
</target>

<!-- Produces "Source code distribution".
  Format: ZIP file
  Name: boxer-and-borj-source-*.*.*.zip
  Content: source code and docs.
-->
<target name="zip-dissrc" depends="javadoc,boxerversion">
  <tempfile property="temp.dir" destDir="${build.tmp}" suffix=".boxer"/>
  <mkdir dir="${temp.dir}"/> 
  <property name="temp.base" value="boxer-and-borj-source-${boxer.ver}"/>   
  <property name="temp.assemble" location="${temp.dir}/${temp.base}"/>
  <mkdir dir="${temp.assemble}"/>

  <copy todir="${temp.assemble}">  
    <fileset dir="." includes="build.xml"/>
    <fileset dir="readme/src"/>
  </copy>

  <copy todir="${temp.assemble}/doc">  
    <fileset dir="${boxer.doc}"/>
  </copy>

  <zip destfile="../${temp.base}.zip" basedir="${temp.dir}"
       includes="${temp.base}/**"/>
  <delete dir="${temp.dir}"/>
</target>

<target name="zip-disdata" depends="boxerversion">
  <tempfile property="temp.dir" destDir="${build.tmp}" suffix=".boxer"/>
  <mkdir dir="${temp.dir}"/> 
  <property name="temp.base" value="sample-data-for-boxer-and-borj-${boxer.ver}"/>   
  <property name="temp.assemble" location="${temp.dir}/${temp.base}"/>
  <mkdir dir="${temp.assemble}"/>

  <copy todir="${temp.assemble}">  
    <fileset dir="sample-data"/>
  </copy>


  <zip destfile="../${temp.base}.zip" basedir="${temp.dir}"
       includes="${temp.base}/**"/>
  <delete dir="${temp.dir}"/>
</target>

<!-- Cannot do this, because "properties are immutable" -->
<!-- target name="all-zip-files" depends="zipall,zip-disbin,zip-dissrc,zip-disdata"/ -->

<!-- deletes the class directory -->
<target name="clean">
  <delete dir="${build}"/>
</target>


</project>
